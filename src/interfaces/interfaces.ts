// Generated by https://quicktype.io

export interface PlacesResponse {
   type:        string;
   query:       string[];
   features:    Feature[];
   attribution: string;
}

export interface Feature {
   id:                   string;
   type:                 string;
   place_type:           string[];
   relevance:            number;
   properties:           Properties;
   text:                 string;
   place_name:           string;
   bbox?:                number[];
   center:               number[];
   geometry:             Geometry;
   context:              Context[];
   matching_text?:       string;
   matching_place_name?: string;
}

export interface Context {
   id:          string;
   short_code?: string;
   wikidata?:   string;
   text:        string;
}

export interface Geometry {
   type:        string;
   coordinates: number[];
}

export interface Properties {
   wikidata?:   string;
   foursquare?: string;
   landmark?:   boolean;
   address?:    string;
   category?:   string;
   maki?:       string;
}


// Generated by https://quicktype.io

export interface RoutesResponse {
   routes:    Route[];
   waypoints: Waypoint[];
   code:      string;
   uuid:      string;
}

export interface Route {
   weight_name: string;
   weight:      number;
   duration:    number;
   distance:    number;
   legs:        Leg[];
   geometry:    GeometryRoute;
}

export interface GeometryRoute {
   coordinates: Array<number[]>;
   type:        string;
}

export interface Leg {
   via_waypoints: any[];
   admins:        Admin[];
   weight:        number;
   duration:      number;
   steps:         Step[];
   distance:      number;
   summary:       string;
}

export interface Admin {
   iso_3166_1_alpha3: string;
   iso_3166_1:        string;
}

export interface Step {
   intersections: Intersection[];
   maneuver:      Maneuver;
   name:          string;
   duration:      number;
   distance:      number;
   driving_side:  string;
   weight:        number;
   mode:          string;
   geometry:      GeometryRoute;
}

export interface Intersection {
   entry:              boolean[];
   bearings:           number[];
   duration?:          number;
   mapbox_streets_v8?: MapboxStreetsV8;
   is_urban?:          boolean;
   admin_index:        number;
   out?:               number;
   weight?:            number;
   geometry_index:     number;
   location:           number[];
   traffic_signal?:    boolean;
   turn_duration?:     number;
   turn_weight?:       number;
   in?:                number;
}

export interface MapboxStreetsV8 {
   class: Class;
}

export enum Class {
   Primary = "primary",
   Secondary = "secondary",
   Street = "street",
}

export interface Maneuver {
   type:           string;
   instruction:    string;
   bearing_after:  number;
   bearing_before: number;
   location:       number[];
   modifier?:      string;
}

export interface Waypoint {
   distance: number;
   name:     string;
   location: number[];
}
